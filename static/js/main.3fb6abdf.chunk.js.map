{"version":3,"sources":["components/Header/Header.jsx","components/Loader/Loader.jsx","pages/Map/Map.jsx","components/Footer/Footer.jsx","components/MessageBar/MessageBar.jsx","App.jsx","index.js"],"names":["Header","src","process","alt","Loader","className","Map","eventBus","useBus","useState","location","coords","setUserLocation","getUserLocationByIP","a","axios","get","data","city","country_name","latitude","longitude","emit","severity","txt","useMount","mapUrl","Button","onClick","variant","disableElevation","title","Footer","MessageBar","useToggle","isOpen","toggleOpen","setMessage","useListener","newMessage","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","App","render","document","getElementById"],"mappings":"kKAAaA,EAAS,WACpB,OACE,iCACE,uCACO,qBAAKC,IAAKC,yBAAsCC,IAAI,KAD3D,e,4ECHOC,EAAS,WACpB,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,uB,OCFVC,EAAM,WACjB,IAAMC,EAAWC,cADM,EAEyBC,mBAAS,CAAEC,SAAU,GAAIC,OAAQ,KAF1D,0BAEdD,EAFc,EAEdA,SAAUC,EAFI,EAEJA,OAAUC,EAFN,KAIjBC,EAAmB,uCAAG,sCAAAC,EAAA,sEAExBF,EAAgB,CAAEF,SAAU,GAAIC,OAAQ,KAFhB,SAKdI,IAAMC,IAAN,wCAA2Cd,6DAL7B,oBAItBe,KAAQC,EAJc,EAIdA,KAAMC,EAJQ,EAIRA,aAAcC,EAJN,EAIMA,SAAUC,EAJhB,EAIgBA,UAExCT,EAAgB,CACdF,SAAS,GAAD,OAAKQ,EAAL,aAAcC,GACtBR,OAAO,GAAD,OAAKS,EAAL,aAAkBC,KARF,kDAWxBd,EAASe,KAAK,aAAc,CAC1BC,SAAU,QACVC,IAAK,4CAbiB,0DAAH,qDAkBzBC,YAASZ,GAET,IAAMa,EAAM,6DACqCxB,0CADrC,cACwEQ,EADxE,mBAC2FC,EAD3F,gBAGZ,OACE,iCACE,6BAAMD,EAAD,8BAAoDA,EAApD,KAAY,iBACjB,8BACE,kDACA,cAACiB,EAAA,EAAD,CAAQC,QAASf,EAAqBgB,QAAQ,YAAYC,kBAAgB,EAA1E,uBAIApB,EAAwB,wBAAQT,IAAKyB,EAAQK,MAAM,QAAxC,cAAC,EAAD,QC3CNC,EAAS,WACpB,OACE,iCACE,gF,2BCGOC,EAAa,WAAO,IAAD,EACDC,aAAU,GADT,mBACvBC,EADuB,KACfC,EADe,OAEU3B,mBAAS,CAAEc,SAAU,GAAIC,IAAK,KAFxC,0BAErBD,EAFqB,EAErBA,SAAUC,EAFW,EAEXA,IAAOa,EAFI,KAS9B,OALAC,YAAY,cAAc,SAAAC,GACxBF,EAAWE,GACXH,GAAW,MAIX,cAACI,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,iBAAkB,IAClBC,KAAMV,EACNW,QAASV,EAJX,SAKE,cAAC,IAAD,CAAUP,QAAQ,WAAWiB,QAASV,EAAYb,SAAUA,EAA5D,SACGC,OCjBIuB,EAAM,WACjB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCLNC,iBACE,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3fb6abdf.chunk.js","sourcesContent":["export const Header = () => {\r\n  return (\r\n    <header>\r\n      <h2>\r\n        Super<img src={process.env.PUBLIC_URL + `/logo.png`} alt=\"\" />Tracer\r\n      </h2>\r\n    </header>\r\n  )\r\n}\r\n","export const Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"sk-chase\">\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { useBus } from 'react-bus'\r\nimport { useMount } from 'react-use'\r\nimport { Button } from '@material-ui/core'\r\nimport { Loader } from '../../components/Loader/Loader'\r\nimport { useState } from 'react'\r\n\r\nexport const Map = () => {\r\n  const eventBus = useBus()\r\n  const [{ location, coords }, setUserLocation] = useState({ location: '', coords: '' })\r\n\r\n  const getUserLocationByIP = async () => {\r\n    try {\r\n      setUserLocation({ location: '', coords: '' })\r\n      const {\r\n        data: { city, country_name, latitude, longitude }\r\n      } = await axios.get(`https://api.ipdata.co?api-key=${process.env.REACT_APP_IP_KEY}`)\r\n      setUserLocation({\r\n        location: `${city}, ${country_name}`,\r\n        coords: `${latitude}, ${longitude}`\r\n      })\r\n    } catch (err) {\r\n      eventBus.emit('newMessage', {\r\n        severity: 'error',\r\n        txt: 'Something went Wrong, Please try again.'\r\n      })\r\n    }\r\n  }\r\n\r\n  useMount(getUserLocationByIP)\r\n\r\n  const mapUrl = `\r\n  https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_MAP_KEY}&q=${location}&center=${coords}&zoom=16\r\n  `\r\n  return (\r\n    <main>\r\n      <h4>{!location ? 'Searching...' : `Welcome, guest from ${location}!`}</h4>\r\n      <p>\r\n        <span>Got it wrong? </span>\r\n        <Button onClick={getUserLocationByIP} variant=\"contained\" disableElevation>\r\n          Reload\r\n        </Button>\r\n      </p>\r\n      {!location ? <Loader /> : <iframe src={mapUrl} title=\"map\" />}\r\n    </main>\r\n  )\r\n}\r\n","export const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Â© Copyrights Tal Harouvi 2021 for Glassix</p>\r\n    </footer>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { useListener } from 'react-bus'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport { useToggle } from 'react-use'\r\n\r\nexport const MessageBar = () => {\r\n  const [isOpen, toggleOpen] = useToggle(false)\r\n  const [{ severity, txt }, setMessage] = useState({ severity: '', txt: '' })\r\n\r\n  useListener('newMessage', newMessage => {\r\n    setMessage(newMessage)\r\n    toggleOpen(true)\r\n  })\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      autoHideDuration={6000}\r\n      open={isOpen}\r\n      onClose={toggleOpen}>\r\n      <MuiAlert variant=\"standard\" onClose={toggleOpen} severity={severity}>\r\n        {txt}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  )\r\n}\r\n","import { Header } from './components/Header/Header'\nimport { Map } from './pages/Map/Map'\nimport { Footer } from './components/Footer/Footer'\nimport { MessageBar } from './components/MessageBar/MessageBar'\n\nexport const App = () => {\n  return (\n    <>\n      <Header />\n      <Map />\n      <Footer />\n      <MessageBar />\n    </>\n  )\n}\n","import { render } from 'react-dom'\nimport { App } from './App.jsx'\nimport { Provider as EventBusProvider } from 'react-bus'\n\nimport './styles/styles.scss'\n\nrender(\n  <EventBusProvider>\n    <App />\n  </EventBusProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}